<?php

/**
 * sfGuardUserTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardUserTable extends PluginsfGuardUserTable {

  /**
   * Returns an instance of this class.
   *
   * @return object sfGuardUserTable
   */
  public static function getInstance() {
    return Doctrine_Core::getTable('sfGuardUser');
  }
/*
 * duynt10
 */
  public function getUserByUsername($username, $is_active = 1)
  {
    $q = $this->createQuery()
      ->where('username = ?', $username)
      ->addWhere('is_active = ?', $is_active);

    return $q->fetchOne();
  }
  public static function active($ids) {
    $query = Doctrine_Core::getTable('sfGuardUser')->createQuery('q')
            ->update()
            ->set('q.is_active', 1)
            ->andWhereIn('q.id', $ids)
            ->andWhere('q.is_active = ?', 0);
    return $query->execute();
  }

  public static function checkSuperAdmin($id) {
    $is_super_admin = 1;
    $query = sfGuardUserTable::getInstance()->createQuery('c')
            ->select('COUNT(c.id) as counts')
            ->where('c.is_super_admin = ?', $is_super_admin)
            ->whereIn('c.id', $id)
            ->execute();

    return $query[0]['counts'];
  }

  public static function deactive($ids) {
    $query = Doctrine_Core::getTable('sfGuardUser')->createQuery('q')
            ->update()
            ->set('q.is_active', 0)
            ->andWhereIn('q.id', $ids)
            ->andWhere('q.is_active = ?', 1);
    return $query->execute();
  }
  
    public static function applyUserNameFilter($query, $value) {
    $alias = $query->getRootAlias();
    $query->addWhere($alias.'.username like ?', "%$value%");
    return $query;
  }
  public function updateUserLog($username, $time)
  {
    $q = $this->createQuery()
      ->update()
      ->set('is_lock_signin', '?', 1)
      ->set('locked_time', '?', $time)
      ->where('username = ?', $username);

    return $q->execute();
  }
  /*
   * duynt10
   * mat khau manh - unlock
   */
  public function setUnLockUser($username)
  {
    $q = $this->createQuery()
      ->update()
      ->set('is_lock_signin', '?', 0)
      ->set('locked_time', '?', 0)
      ->where('username = ?', $username);

    return $q->execute();
  }

    public static function getListUserActive(){
        return sfGuardUserTable::getInstance()->createQuery()
            ->select('username, id')
            ->where('is_active =?', VtUserStatusEnum::ACTIVE)
            ->orderBy('username ASC')
            ->fetchArray();
    }

    public static function queryListUserActive(){
        return sfGuardUserTable::getInstance()->createQuery()
            ->select('username, id')
            ->where('is_active =?', VtUserStatusEnum::ACTIVE)
            ->orderBy('username ASC');
    }


}