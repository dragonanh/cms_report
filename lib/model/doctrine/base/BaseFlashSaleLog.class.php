<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FlashSaleLog', 'doctrine');

/**
 * BaseFlashSaleLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $msisdn
 * @property string $app_code
 * @property string $flash_sale_id
 * @property string $pack_code
 * @property string $serial
 * @property string $tran_id
 * @property string $register_status
 * @property string $processed
 * @property string $card_price
 * @property string $amount
 * @property string $base_price
 * @property string $error_code
 * @property string $error_message
 * 
 * @method string       get()                Returns the current record's "msisdn" value
 * @method string       get()                Returns the current record's "app_code" value
 * @method string       get()                Returns the current record's "flash_sale_id" value
 * @method string       get()                Returns the current record's "pack_code" value
 * @method string       get()                Returns the current record's "serial" value
 * @method string       get()                Returns the current record's "tran_id" value
 * @method string       get()                Returns the current record's "register_status" value
 * @method string       get()                Returns the current record's "processed" value
 * @method string       get()                Returns the current record's "card_price" value
 * @method string       get()                Returns the current record's "amount" value
 * @method string       get()                Returns the current record's "base_price" value
 * @method string       get()                Returns the current record's "error_code" value
 * @method string       get()                Returns the current record's "error_message" value
 * @method FlashSaleLog set()                Sets the current record's "msisdn" value
 * @method FlashSaleLog set()                Sets the current record's "app_code" value
 * @method FlashSaleLog set()                Sets the current record's "flash_sale_id" value
 * @method FlashSaleLog set()                Sets the current record's "pack_code" value
 * @method FlashSaleLog set()                Sets the current record's "serial" value
 * @method FlashSaleLog set()                Sets the current record's "tran_id" value
 * @method FlashSaleLog set()                Sets the current record's "register_status" value
 * @method FlashSaleLog set()                Sets the current record's "processed" value
 * @method FlashSaleLog set()                Sets the current record's "card_price" value
 * @method FlashSaleLog set()                Sets the current record's "amount" value
 * @method FlashSaleLog set()                Sets the current record's "base_price" value
 * @method FlashSaleLog set()                Sets the current record's "error_code" value
 * @method FlashSaleLog set()                Sets the current record's "error_message" value
 * 
 * @package    cms_ctt
 * @subpackage model
 * @author     viettel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFlashSaleLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('flash_sale_log');
        $this->hasColumn('msisdn', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('app_code', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('flash_sale_id', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('pack_code', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('serial', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('tran_id', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('register_status', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('processed', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('card_price', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('amount', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('base_price', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('error_code', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('error_message', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}