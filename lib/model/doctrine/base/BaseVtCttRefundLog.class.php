<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('VtCttRefundLog', 'doctrine');

/**
 * BaseVtCttRefundLog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $tran_id
 * @property integer $refund_amount
 * @property integer $refund_type
 * @property clob $reason
 * @property string $username
 * @property string $ip
 * @property string $file_path
 * @property int $status
 * @property clob $message
 * 
 * @method string         getTranId()        Returns the current record's "tran_id" value
 * @method integer        getRefundAmount()  Returns the current record's "refund_amount" value
 * @method integer        getRefundType()    Returns the current record's "refund_type" value
 * @method clob           getReason()        Returns the current record's "reason" value
 * @method string         getUsername()      Returns the current record's "username" value
 * @method string         getIp()            Returns the current record's "ip" value
 * @method string         getFilePath()      Returns the current record's "file_path" value
 * @method int            getStatus()        Returns the current record's "status" value
 * @method clob           getMessage()       Returns the current record's "message" value
 * @method VtCttRefundLog setTranId()        Sets the current record's "tran_id" value
 * @method VtCttRefundLog setRefundAmount()  Sets the current record's "refund_amount" value
 * @method VtCttRefundLog setRefundType()    Sets the current record's "refund_type" value
 * @method VtCttRefundLog setReason()        Sets the current record's "reason" value
 * @method VtCttRefundLog setUsername()      Sets the current record's "username" value
 * @method VtCttRefundLog setIp()            Sets the current record's "ip" value
 * @method VtCttRefundLog setFilePath()      Sets the current record's "file_path" value
 * @method VtCttRefundLog setStatus()        Sets the current record's "status" value
 * @method VtCttRefundLog setMessage()       Sets the current record's "message" value
 * 
 * @package    cms_ctt
 * @subpackage model
 * @author     viettel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVtCttRefundLog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vt_ctt_refund_log');
        $this->hasColumn('tran_id', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Ma don hang',
             'length' => 255,
             ));
        $this->hasColumn('refund_amount', 'integer', 20, array(
             'type' => 'integer',
             'comment' => 'So tien hoan',
             'length' => 20,
             ));
        $this->hasColumn('refund_type', 'integer', 2, array(
             'type' => 'integer',
             'comment' => '(0: hoan toan phan, 1: hoan 1 phan)',
             'length' => 2,
             ));
        $this->hasColumn('reason', 'clob', null, array(
             'type' => 'clob',
             'comment' => 'ly do hoan tien',
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'comment' => 'usser hoan tien',
             'length' => 255,
             ));
        $this->hasColumn('ip', 'string', 50, array(
             'type' => 'string',
             'comment' => 'ip thuc hien hoan tien',
             'length' => 50,
             ));
        $this->hasColumn('file_path', 'string', 255, array(
             'type' => 'string',
             'comment' => 'dương dan file bb xac nhan hoan tien',
             'length' => 255,
             ));
        $this->hasColumn('status', 'int', null, array(
             'type' => 'int',
             'comment' => 'Trang thai gui hoan tien',
             ));
        $this->hasColumn('message', 'clob', null, array(
             'type' => 'clob',
             'comment' => 'Mo ta loi',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}