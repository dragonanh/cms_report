<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('VtCttTransaction', 'doctrine');

/**
 * BaseVtCttTransaction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $calling
 * @property integer $isdn
 * @property string $tran_id
 * @property integer $amount
 * @property string $version
 * @property string $description
 * @property string $service_pay
 * @property string $ctt_package
 * @property integer $command_code
 * @property clob $content
 * @property string $omni_order_code
 * @property string $omni_error_code
 * @property string $omni_order_message
 * @property string $ctt_id
 * @property integer $status
 * @property datetime $ctt_pay_update_time
 * @property string $source
 * @property integer $order_type
 * @property string $ctt_package_name
 * @property string $sim_number
 * @property integer $base_price
 * @property string $service_indicator
 * @property string $refund_error_code
 * @property string $channel
 * @property integer $refund_status
 * @property string $bank_code
 * @property VtVpgTransaction $VtVpgTransaction
 * 
 * @method string           getCalling()             Returns the current record's "calling" value
 * @method integer          getIsdn()                Returns the current record's "isdn" value
 * @method string           getTranId()              Returns the current record's "tran_id" value
 * @method integer          getAmount()              Returns the current record's "amount" value
 * @method string           getVersion()             Returns the current record's "version" value
 * @method string           getDescription()         Returns the current record's "description" value
 * @method string           getServicePay()          Returns the current record's "service_pay" value
 * @method string           getCttPackage()          Returns the current record's "ctt_package" value
 * @method integer          getCommandCode()         Returns the current record's "command_code" value
 * @method clob             getContent()             Returns the current record's "content" value
 * @method string           getOmniOrderCode()       Returns the current record's "omni_order_code" value
 * @method string           getOmniErrorCode()       Returns the current record's "omni_error_code" value
 * @method string           getOmniOrderMessage()    Returns the current record's "omni_order_message" value
 * @method string           getCttId()               Returns the current record's "ctt_id" value
 * @method integer          getStatus()              Returns the current record's "status" value
 * @method datetime         getCttPayUpdateTime()    Returns the current record's "ctt_pay_update_time" value
 * @method string           getSource()              Returns the current record's "source" value
 * @method integer          getOrderType()           Returns the current record's "order_type" value
 * @method string           getCttPackageName()      Returns the current record's "ctt_package_name" value
 * @method string           getSimNumber()           Returns the current record's "sim_number" value
 * @method integer          getBasePrice()           Returns the current record's "base_price" value
 * @method string           getServiceIndicator()    Returns the current record's "service_indicator" value
 * @method string           getRefundErrorCode()     Returns the current record's "refund_error_code" value
 * @method string           getChannel()             Returns the current record's "channel" value
 * @method integer          getRefundStatus()        Returns the current record's "refund_status" value
 * @method string           getBankCode()            Returns the current record's "bank_code" value
 * @method VtVpgTransaction getVtVpgTransaction()    Returns the current record's "VtVpgTransaction" value
 * @method VtCttTransaction setCalling()             Sets the current record's "calling" value
 * @method VtCttTransaction setIsdn()                Sets the current record's "isdn" value
 * @method VtCttTransaction setTranId()              Sets the current record's "tran_id" value
 * @method VtCttTransaction setAmount()              Sets the current record's "amount" value
 * @method VtCttTransaction setVersion()             Sets the current record's "version" value
 * @method VtCttTransaction setDescription()         Sets the current record's "description" value
 * @method VtCttTransaction setServicePay()          Sets the current record's "service_pay" value
 * @method VtCttTransaction setCttPackage()          Sets the current record's "ctt_package" value
 * @method VtCttTransaction setCommandCode()         Sets the current record's "command_code" value
 * @method VtCttTransaction setContent()             Sets the current record's "content" value
 * @method VtCttTransaction setOmniOrderCode()       Sets the current record's "omni_order_code" value
 * @method VtCttTransaction setOmniErrorCode()       Sets the current record's "omni_error_code" value
 * @method VtCttTransaction setOmniOrderMessage()    Sets the current record's "omni_order_message" value
 * @method VtCttTransaction setCttId()               Sets the current record's "ctt_id" value
 * @method VtCttTransaction setStatus()              Sets the current record's "status" value
 * @method VtCttTransaction setCttPayUpdateTime()    Sets the current record's "ctt_pay_update_time" value
 * @method VtCttTransaction setSource()              Sets the current record's "source" value
 * @method VtCttTransaction setOrderType()           Sets the current record's "order_type" value
 * @method VtCttTransaction setCttPackageName()      Sets the current record's "ctt_package_name" value
 * @method VtCttTransaction setSimNumber()           Sets the current record's "sim_number" value
 * @method VtCttTransaction setBasePrice()           Sets the current record's "base_price" value
 * @method VtCttTransaction setServiceIndicator()    Sets the current record's "service_indicator" value
 * @method VtCttTransaction setRefundErrorCode()     Sets the current record's "refund_error_code" value
 * @method VtCttTransaction setChannel()             Sets the current record's "channel" value
 * @method VtCttTransaction setRefundStatus()        Sets the current record's "refund_status" value
 * @method VtCttTransaction setBankCode()            Sets the current record's "bank_code" value
 * @method VtCttTransaction setVtVpgTransaction()    Sets the current record's "VtVpgTransaction" value
 * 
 * @package    cms_ctt
 * @subpackage model
 * @author     viettel
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVtCttTransaction extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vt_ctt_transaction');
        $this->hasColumn('calling', 'string', 50, array(
             'type' => 'string',
             'comment' => 'So dien thoai thanh toan',
             'length' => 50,
             ));
        $this->hasColumn('isdn', 'integer', 20, array(
             'type' => 'integer',
             'comment' => 'so dien thoai thu huong',
             'length' => 20,
             ));
        $this->hasColumn('tran_id', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Ma giao dich ben myviettel tu sinh',
             'length' => 255,
             ));
        $this->hasColumn('amount', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'comment' => 'So tien can thanh toan',
             'length' => 11,
             ));
        $this->hasColumn('version', 'string', 50, array(
             'type' => 'string',
             'comment' => 'version cua cong thanh toan',
             'length' => 50,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Noi dung thanh toan',
             'length' => 255,
             ));
        $this->hasColumn('service_pay', 'string', 255, array(
             'type' => 'string',
             'comment' => '(mps: gói vas, vtfree: gói vtfree, topup, omi: nghiệp vụ omi, data: gói data)',
             'length' => 255,
             ));
        $this->hasColumn('ctt_package', 'string', 255, array(
             'type' => 'string',
             'comment' => 'tên gói cước (trường hợp mua gói vas, data, vtfree)',
             'length' => 255,
             ));
        $this->hasColumn('command_code', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             'comment' => 'mã chu kỳ đối với gói vas',
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             'comment' => 'dạng json lưu thông tin đơn hàng với loại mua sim ',
             ));
        $this->hasColumn('omni_order_code', 'string', 255, array(
             'type' => 'string',
             'comment' => 'mã đơn hàng với các nghiệp vụ omi',
             'length' => 255,
             ));
        $this->hasColumn('omni_error_code', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Ma loi khi dat hang',
             'length' => 255,
             ));
        $this->hasColumn('omni_order_message', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Ma loi khi dat hang',
             'length' => 255,
             ));
        $this->hasColumn('ctt_id', 'string', 255, array(
             'type' => 'string',
             'comment' => 'id giao dịch bên ctt, trả về trong payRessult',
             'length' => 255,
             ));
        $this->hasColumn('status', 'integer', 2, array(
             'type' => 'integer',
             'comment' => 'trạng thái giao dịch thanh toán -1: thanh toán pending, 0: thanh toán thất bại, 1: thanh toán thành công, 2: hoàn tiền thành công, 3: hoàn tiền thất bại',
             'length' => 2,
             ));
        $this->hasColumn('ctt_pay_update_time', 'datetime', null, array(
             'type' => 'datetime',
             'comment' => 'thời gian cập nhật kết quả',
             ));
        $this->hasColumn('source', 'string', 255, array(
             'type' => 'string',
             'comment' => 'APP,WEB,WAP',
             'length' => 255,
             ));
        $this->hasColumn('order_type', 'integer', 2, array(
             'type' => 'integer',
             'comment' => 'loại giao dịch (1: prepaid, 2: postpaid, 21: register vas, 22: register data, 23: register vtfree, 24: topup)',
             'length' => 2,
             ));
        $this->hasColumn('ctt_package_name', 'string', 255, array(
             'type' => 'string',
             'comment' => 'Ten goi cuoc dang ky',
             'length' => 255,
             ));
        $this->hasColumn('sim_number', 'string', 50, array(
             'type' => 'string',
             'comment' => 'So sim dang ky mua',
             'length' => 50,
             ));
        $this->hasColumn('base_price', 'integer', 11, array(
             'type' => 'integer',
             'comment' => 'Gia goc',
             'length' => 11,
             ));
        $this->hasColumn('service_indicator', 'string', 10, array(
             'type' => 'string',
             'comment' => 'dung de truyen sang ws gach no',
             'length' => 10,
             ));
        $this->hasColumn('refund_error_code', 'string', 45, array(
             'type' => 'string',
             'comment' => 'Ma loi hoan tien',
             'length' => 45,
             ));
        $this->hasColumn('channel', 'string', 255, array(
             'type' => 'string',
             'default' => 0,
             'comment' => 'Kênh dich vụ tích hợp vào thanh toán',
             'length' => 255,
             ));
        $this->hasColumn('refund_status', 'integer', 2, array(
             'type' => 'integer',
             'default' => 0,
             'comment' => 'Trạng thái hoàn tiền',
             'length' => 2,
             ));
        $this->hasColumn('bank_code', 'string', 50, array(
             'type' => 'string',
             'comment' => 'Nguon tien',
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('VtVpgTransaction', array(
             'local' => 'tran_id',
             'foreign' => 'tran_id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}